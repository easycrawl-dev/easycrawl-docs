/* eslint-env node */
import type { Metadata } from 'next'
import {
  Footer,
  LastUpdated,
  Layout,
  LocaleSwitch,
  Navbar
} from 'nextra-theme-docs'
import { Head } from 'nextra/components'
import { getPageMap } from 'nextra/page-map'
import type { FC, ReactNode } from 'react'
import { getDictionary } from '../_dictionaries/get-dictionary'
import 'nextra-theme-docs/style.css'

export const metadata: Metadata = {
  title: 'Next.js',
  description: 'Generated by Next.js',
}

const navbar = (
  <Navbar
    logo={
      <>
        <span className="ms-2 select-none font-extrabold max-md:hidden">
          Easycrawl
        </span>
      </>
    }
    projectLink="https://github.com/easycrawl-dev"
    chatLink="https://t.me/easycrawl"
  >
    <LocaleSwitch lite />
  </Navbar>
)

const footer = <Footer>MIT {new Date().getFullYear()} © Nextra.</Footer>

type LayoutProps = Readonly<{
  children: ReactNode
  params: Promise<{
    lang: string
  }>
}>

const RootLayout: FC<LayoutProps> = async ({ children, params }) => {
  const { lang } = await params
  const dictionary = await getDictionary(lang)

  return (
    <html lang={lang} suppressHydrationWarning>
      <Head />
      <body>
        <Layout
          navbar={navbar}
          pageMap={await getPageMap(`/${lang}`)}
          footer={footer}
          docsRepositoryBase="https://github.com/easycrawl-dev/easycrawl-docs"
          i18n={[
            { locale: 'en', name: 'English' },
            { locale: 'zh', name: '中文' }
          ]}
          sidebar={{
            defaultMenuCollapseLevel: 1,
            autoCollapse: true
          }}
          toc={{
            backToTop: dictionary.backToTop,
            extraContent: (<></>)
          }}
          editLink={dictionary.editPage}
          nextThemes={{ defaultTheme: 'dark' }}
          lastUpdated={<LastUpdated>{dictionary.lastUpdated}</LastUpdated>}
          themeSwitch={{
            dark: dictionary.dark,
            light: dictionary.light,
            system: dictionary.system
          }}
        >
          {children}
        </Layout>
      </body>
    </html>
  )
}

export default RootLayout